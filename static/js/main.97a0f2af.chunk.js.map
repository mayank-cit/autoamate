{"version":3,"sources":["HOC/Auxiliary.js","component/Header/Header.js","component/Layout/Layout.js","component/LogIn/LogIn.js","component/ListWorkFlow/WorkFlowCard/WorkFlowCard.js","component/ListWorkFlow/ListWorkFlow.js","containers/WorkFlowBuilder/WorkFlowBuilder.js","component/WorkFlow/WorkFlowTask/WorkFlowTask.js","component/WorkFlow/WorkFlow.js","App.js","serviceWorker.js","index.js","component/ListWorkFlow/WorkFlowCard/WorkFlowCard.module.css","component/ListWorkFlow/ListWorkFlow.module.css","component/WorkFlow/WorkFlowTask/WorkFlowTask.module.css","component/Layout/Layout.module.css","component/Header/Header.module.css","component/WorkFlow/WorkFlow.module.css","component/LogIn/Login.module.css"],"names":["aux","props","children","Header","divCLass","push","clasess","className","join","layout","Content","Login","state","email","password","isValidEmail","isPassword","isLoginHandler","validator","isEmail","setState","history","emailValueHandler","e","target","value","passwordValueHandler","LogInForm","LogIn","InputFields","type","placeholder","classes","Input","onChange","this","title","Error","style","marginTop","Button","onClick","SignUp","Component","WorkFlowCard","iconCLass","status","TickIconPending","TickIcon","WorkflowBox","WorkflowName","name","readOnly","click","clickIcon","aria-hidden","ListWorkFlow","workflows","isCompleted","totalWorkflows","map","wf","i","navigateWorkflowHandler","changeWorkFLowHandler","key","allworkflows","updateTask","indexOf","find","item","task","some","el","alert","pathname","appdata","data","filterWorkflowHandler","searched","filter","includes","addWorkFlowHandler","newflow","length","searchWorkflowHandler","FilterButton","bind","CreateButton","withRouter","WorkFlowBuilder","workFlowTask","cursor","TaskBox","TaskName","StatusIcon","backgroundColor","WorkFLow","taskList","location","workFlowName","workFlowStatus","changeStatus","actualTasks","updateStatus","updatedTaskIndex","shuffleTaskHandler","shuffleArray","rand","Math","floor","random","temp","deleteTask","updatedTaskList","pop","addTask","defaultValue","textAlign","WorkFlowTask","App","Layout","path","exact","component","WorkFlow","Boolean","window","hostname","match","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.97a0f2af.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\r\nimport clasess from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n  let divCLass = [];\r\n  divCLass.push(\"row\", clasess.Header);\r\n\r\n  return (\r\n    <div className={divCLass.join(\" \")}>\r\n      <div className=\"col-xs-2\">FLOWAPP</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Aux from \"../../HOC/Auxiliary\";\r\nimport clasess from \"./Layout.module.css\";\r\nimport Header from \"../Header/Header\";\r\nconst layout = (props) => (\r\n  <Aux>\r\n    <Header></Header>\r\n    <main className={clasess.Content}>{props.children}</main>\r\n  </Aux>\r\n);\r\n\r\nexport default layout;\r\n","import React, { Component } from \"react\";\r\nimport clasess from \"./Login.module.css\";\r\nimport validator from \"validator\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    email: \" \",\r\n    password: null,\r\n    isValidEmail: true,\r\n    isPassword: true,\r\n  };\r\n\r\n  isLoginHandler = () => {\r\n    if (validator.isEmail(this.state.email)) {\r\n      this.setState({ isValidEmail: true });\r\n      if (this.state.password != null) {\r\n        this.props.history.push(\"/WorkFlowBuilder\");\r\n      } else {\r\n        this.setState({ isPassword: false });\r\n      }\r\n    } else {\r\n      this.setState({ isValidEmail: false });\r\n    }\r\n  };\r\n\r\n  emailValueHandler = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  };\r\n\r\n  passwordValueHandler = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-4 col-xs-offset-4\">\r\n          <form className={clasess.LogInForm}>\r\n            <h2 className={clasess.LogIn}>Login</h2>\r\n            <div className={clasess.InputFields}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                className={classes.Input}\r\n                onChange={this.emailValueHandler}\r\n                title=\"Email is a compulsory field!!!!\"\r\n              ></input>\r\n\r\n              {this.state.isValidEmail === false && (\r\n                <p className={classes.Error}>\r\n                  Invalid Email, please try again!!!\r\n                </p>\r\n              )}\r\n              <br></br>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                className={classes.Input}\r\n                style={{ marginTop: \"1em\" }}\r\n                onChange={this.passwordValueHandler}\r\n              ></input>\r\n              {this.state.isPassword === false && (\r\n                <p className={classes.Error}>\r\n                  Password can not be kept blank!!!\r\n                </p>\r\n              )}\r\n              <br></br>\r\n              <button\r\n                type=\"button\"\r\n                className={clasess.Button}\r\n                onClick={this.isLoginHandler}\r\n              >\r\n                Login\r\n              </button>\r\n\r\n              <div className={clasess.SignUp}>\r\n                Don't have an Account? Sign Up here\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport classes from \"./WorkFlowCard.module.css\";\r\n\r\nconst WorkFlowCard = (props) => {\r\n  let iconCLass = [];\r\n  {\r\n    props.status === \"Pending\"\r\n      ? iconCLass.push(classes.TickIconPending)\r\n      : iconCLass.push(classes.TickIcon);\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-xs-3\">\r\n      <div className={classes.WorkflowBox}>\r\n        <input\r\n          className={classes.WorkflowName}\r\n          value={props.name}\r\n          readOnly\r\n          onClick={props.click}\r\n          title=\"Click to Edit/Open the workflow!!!!!\"\r\n        />\r\n        <div>\r\n          <span>{props.status}</span>\r\n          <span className={iconCLass} onClick={props.clickIcon}>\r\n            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkFlowCard;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport Aux from \"../../HOC/Auxiliary\";\r\nimport classes from \"./ListWorkFlow.module.css\";\r\nimport WorkFlowCard from \"./WorkFlowCard/WorkFlowCard\";\r\n\r\nclass ListWorkFlow extends Component {\r\n  state = {\r\n    workflows: this.props.workflows,\r\n    isCompleted: true,\r\n  };\r\n\r\n  totalWorkflows = (\r\n    <div className=\"row\">\r\n      {this.state.workflows.map((wf, i) => {\r\n        return (\r\n          <WorkFlowCard\r\n            name={wf.name}\r\n            status={wf.status}\r\n            click={() => this.navigateWorkflowHandler(wf)}\r\n            clickIcon={() => this.changeWorkFLowHandler(wf)}\r\n            key={wf.name + i}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  changeWorkFLowHandler = (wf) => {\r\n    let allworkflows = this.props.workflows;\r\n    const updateTask = allworkflows.indexOf(\r\n      allworkflows.find((item) => item.name === wf.name)\r\n    );\r\n\r\n    const isPending = allworkflows[updateTask].task.some(\r\n      (el) => el.status === \"Pending\"\r\n    );\r\n\r\n    if (!isPending) {\r\n      allworkflows[updateTask].status = \"Completed\";\r\n      allworkflows = allworkflows.map((wf, i) => {\r\n        return (\r\n          <WorkFlowCard\r\n            name={wf.name}\r\n            status={wf.status}\r\n            click={() => this.navigateWorkflowHandler(wf)}\r\n            clickIcon={() => this.changeWorkFLowHandler(wf)}\r\n            key={wf.name + i}\r\n          />\r\n        );\r\n      });\r\n      this.totalWorkflows = [...allworkflows];\r\n      this.setState({ workflows: this.totalWorkflows });\r\n    } else {\r\n      alert(\r\n        \"Can not change status as associated tasks are in Pending state!!!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  navigateWorkflowHandler = (wf) => {\r\n    this.props.history.push({\r\n      pathname: \"/workFlow\",\r\n      appdata: { data: wf },\r\n    });\r\n  };\r\n\r\n  filterWorkflowHandler = (e) => {\r\n    const searched = this.props.workflows\r\n      .filter((status) => {\r\n        return e.target.value.includes(status.status);\r\n      })\r\n      .map((wf, i) => {\r\n        return (\r\n          <WorkFlowCard\r\n            name={wf.name}\r\n            status={wf.status}\r\n            click={() => this.navigateWorkflowHandler(wf)}\r\n            clickIcon={() => this.changeWorkFLowHandler(wf)}\r\n            key={wf.name + i}\r\n          />\r\n        );\r\n      });\r\n    this.totalWorkflows = [...searched];\r\n    this.setState({ workflows: this.totalWorkflows });\r\n  };\r\n\r\n  addWorkFlowHandler = () => {\r\n    let newflow = this.props.workflows;\r\n    newflow.push({\r\n      name: \"Workflow\" + (newflow.length + 1),\r\n      status: \"Pending\",\r\n      task: [{ name: \"Task1\", status: \"Pending\" }],\r\n    });\r\n    newflow = newflow.map((wf, i) => {\r\n      return (\r\n        <WorkFlowCard\r\n          name={wf.name}\r\n          status={wf.status}\r\n          click={() => this.navigateWorkflowHandler(wf)}\r\n          clickIcon={() => this.changeWorkFLowHandler(wf)}\r\n          key={wf.name + i}\r\n        />\r\n      );\r\n    });\r\n    this.totalWorkflows = [...newflow];\r\n    this.setState({ workflows: this.totalWorkflows });\r\n  };\r\n\r\n  searchWorkflowHandler = (e) => {\r\n    const searched = this.props.workflows\r\n      .filter((name) => !e.target.value || name.name === e.target.value)\r\n      .map((wf, i) => {\r\n        return (\r\n          <WorkFlowCard\r\n            name={wf.name}\r\n            status={wf.status}\r\n            click={() => this.navigateWorkflowHandler(wf)}\r\n            clickIcon={() => this.changeWorkFLowHandler(wf)}\r\n            key={wf.name + i}\r\n          />\r\n        );\r\n      });\r\n    this.totalWorkflows = [...searched];\r\n    this.setState({ workflows: this.totalWorkflows });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-5\">\r\n            <input\r\n              className={classes.Input}\r\n              placeholder=\"&#xF002; Search Workflows\"\r\n              onChange={this.searchWorkflowHandler}\r\n            />\r\n            <span className={classes.FilterButton}>\r\n              <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>&nbsp;\r\n              <select onChange={this.filterWorkflowHandler.bind(this)}>\r\n                <option value=\"Completed,Pending\">ALL</option>\r\n                <option value=\"Completed\">COMPLETED</option>\r\n                <option value=\"Pending\">PENDING</option>\r\n              </select>\r\n            </span>\r\n          </div>\r\n          <div className=\"col-xs-offset-5 col-xs-2\">\r\n            <button\r\n              className={classes.CreateButton}\r\n              onClick={this.addWorkFlowHandler}\r\n            >\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Create Workflow\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {this.totalWorkflows}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ListWorkFlow);\r\n","import React, { Component } from \"react\";\r\nimport ListWorkFlow from \"../../component/ListWorkFlow/ListWorkFlow\";\r\nimport Aux from \"../../HOC/Auxiliary\";\r\n\r\nclass WorkFlowBuilder extends Component {\r\n  state = {\r\n    workflows: [\r\n      {\r\n        name: \"Workflow1\",\r\n        status: \"Pending\",\r\n        task: [\r\n          { name: \"Task1\", status: \"Completed\" },\r\n          { name: \"Task2\", status: \"Pending\" },\r\n          { name: \"Task3\", status: \"InProgress\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"Workflow2\",\r\n        status: \"Completed\",\r\n        task: [\r\n          { name: \"Task1\", status: \"Completed\" },\r\n          { name: \"Task2\", status: \"Completed\" },\r\n          { name: \"Task3\", status: \"Completed\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"Workflow3\",\r\n        status: \"Pending\",\r\n        task: [\r\n          { name: \"Task1\", status: \"Completed\" },\r\n          { name: \"Task2\", status: \"Completed\" },\r\n          { name: \"Task3\", status: \"Completed\" },\r\n        ],\r\n      },\r\n      {\r\n        name: \"Workflow4\",\r\n        status: \"Pending\",\r\n        task: [\r\n          { name: \"Task1\", status: \"Completed\" },\r\n          { name: \"Task2\", status: \"Completed\" },\r\n          { name: \"Task3\", status: \"Completed\" },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <ListWorkFlow workflows={this.state.workflows} />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkFlowBuilder;\r\n","import React from \"react\";\r\nimport classes from \"./WorkFlowTask.module.css\";\r\nimport Aux from \"../../../HOC/Auxiliary\";\r\nconst workFlowTask = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div\r\n        className=\"col-xs-2\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={props.click}\r\n      >\r\n        <div className={classes.TaskBox}>\r\n          <input className={classes.TaskName} value={props.name} readOnly />\r\n          <textarea value={props.status} readOnly></textarea>\r\n        </div>\r\n        <span\r\n          className={classes.StatusIcon}\r\n          style={{\r\n            backgroundColor:\r\n              props.status === \"Completed\"\r\n                ? \"green\"\r\n                : props.status === \"Pending\"\r\n                ? \"grey\"\r\n                : \"blue\",\r\n          }}\r\n        >\r\n          <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n        </span>\r\n      </div>\r\n      <div className=\"col-xs-1\" style={{ marginTop: \"12%\" }}>\r\n        <i className=\"fa fa-5x fa-long-arrow-right\" aria-hidden=\"true\"></i>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default workFlowTask;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../HOC/Auxiliary\";\r\nimport WorkFlowTask from \"../WorkFlow/WorkFlowTask/WorkFlowTask\";\r\nimport classes from \"./WorkFlow.module.css\";\r\n\r\nclass WorkFLow extends Component {\r\n  state = {\r\n    taskList: this.props.location.appdata.data.task,\r\n    workFlowName: this.props.location.appdata.data.name,\r\n    workFlowStatus: this.props.location.appdata.data.status,\r\n  };\r\n\r\n  changeStatus = (task) => {\r\n    let actualTasks = this.state.taskList;\r\n    let updateStatus = {\r\n      name: task.name,\r\n      status:\r\n        task.status === \"Completed\"\r\n          ? \"Pending\"\r\n          : task.status === \"Pending\"\r\n          ? \"InProgress\"\r\n          : \"Completed\",\r\n    };\r\n\r\n    const updatedTaskIndex = actualTasks.indexOf(\r\n      actualTasks.find((item) => item.name === updateStatus.name)\r\n    );\r\n    actualTasks[updatedTaskIndex] = updateStatus;\r\n    this.setState({ taskList: actualTasks });\r\n  };\r\n\r\n  shuffleTaskHandler = () => {\r\n    const shuffleArray = this.state.taskList;\r\n    for (let i = shuffleArray.length - 1; i > 0; i--) {\r\n      const rand = Math.floor(Math.random() * (i + 1));\r\n      const temp = shuffleArray[i];\r\n      shuffleArray[i] = shuffleArray[rand];\r\n      shuffleArray[rand] = temp;\r\n    }\r\n    this.setState({ taskList: shuffleArray });\r\n  };\r\n\r\n  deleteTask = () => {\r\n    const updatedTaskList = this.state.taskList;\r\n    if (updatedTaskList.length > 1) {\r\n      updatedTaskList.pop();\r\n      this.setState({ taskList: updatedTaskList });\r\n    } else {\r\n      alert(\r\n        \"This task can not be deleted.A workflow should have atleast one task!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  addTask = () => {\r\n    const updatedTaskList = this.state.taskList;\r\n    updatedTaskList.push({\r\n      name: \"Task\" + (updatedTaskList.length + 1),\r\n      status: \"Pending\",\r\n    });\r\n\r\n    this.setState({ taskList: updatedTaskList });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-4\">\r\n            <input\r\n              className={classes.Input}\r\n              defaultValue={this.state.workFlowName}\r\n              // onChange={search} {this.props.location.appdata.test}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-xs-offset-3 col-xs-5\"\r\n            style={{ textAlign: \"center\" }}\r\n          >\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={this.shuffleTaskHandler}\r\n            >\r\n              <i className=\"fa fa-random\" aria-hidden=\"true\"></i> Shuffle\r\n            </button>\r\n            <button className=\"btn btn-danger\" onClick={this.deleteTask}>\r\n              <i className=\"fa fa-times\" aria-hidden=\"true\"></i> Delete\r\n            </button>\r\n            <button className=\"btn btn-success\" onClick={this.addTask}>\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add Node\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ backgroundColor: \"#3A5CD9\", cursor: \"not-allowed\" }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"row\">\r\n          {this.state.taskList.map((task, i) => {\r\n            return (\r\n              <WorkFlowTask\r\n                name={task.name}\r\n                key={task.name + i}\r\n                status={task.status}\r\n                click={() => this.changeStatus(task)}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkFLow;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./component/Layout/Layout\";\nimport Login from \"./component/LogIn/LogIn\";\nimport WorkFlowBuilder from \"./containers/WorkFlowBuilder/WorkFlowBuilder\";\nimport WorkFlow from \"./component/WorkFlow/WorkFlow\";\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Layout>\n        <Switch>\n          <Route path=\"/autoamate\" exact component={Login}></Route>\n          <Route path=\"/WorkFlowBuilder\" component={WorkFlowBuilder}></Route>\n          <Route path=\"/workFlow\" component={WorkFlow}></Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap3/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nconst app = (\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WorkflowBox\":\"WorkFlowCard_WorkflowBox__1YYaf\",\"WorkflowName\":\"WorkFlowCard_WorkflowName__NRt_j\",\"TickIcon\":\"WorkFlowCard_TickIcon__1ScTh\",\"TickIconPending\":\"WorkFlowCard_TickIconPending__3-6PO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"ListWorkFlow_Input__3Kkbg\",\"CreateButton\":\"ListWorkFlow_CreateButton__2TQdI\",\"FilterButton\":\"ListWorkFlow_FilterButton__2mrlj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskBox\":\"WorkFlowTask_TaskBox__1-gIN\",\"TaskName\":\"WorkFlowTask_TaskName__1ilgV\",\"StatusIcon\":\"WorkFlowTask_StatusIcon__2N6jf\",\"StatusIconpending\":\"WorkFlowTask_StatusIconpending__1ggqF\",\"StatusIconprogress\":\"WorkFlowTask_StatusIconprogress__3kLbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__m-eLR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1Blrz\",\"LogOut\":\"Header_LogOut__15PKQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"WorkFlow_Input__1HAaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogInForm\":\"Login_LogInForm__3xzcN\",\"LogIn\":\"Login_LogIn__1FliE\",\"InputFields\":\"Login_InputFields__1YvIK\",\"Error\":\"Login_Error__2U2LE\",\"Input\":\"Login_Input__1k-OL\",\"Button\":\"Login_Button__1Sj8W\",\"SignUp\":\"Login_SignUp__3kgve\"};"],"sourceRoot":""}